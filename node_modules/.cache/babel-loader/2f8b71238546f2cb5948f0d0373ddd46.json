{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/moringa/Documents/Phase 2/Code Challenges/phase-2-hooks-code-challenge-bot-battlr-KevinKiseli/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  _s();\n\n  // State for all available bots\n  const [bots, setBots] = useState([]); //State for bots in my army\n\n  const [enlistedBots, setEnlistedBots] = useState([]); // Fetches bots from API\n\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\").then(response => response.json()).then(bots => {\n      setBots(bots);\n    });\n  }, []); // Enlists bots in army\n\n  const enlistBot = bot => {\n    // checking if bot is already enlisted\n    if (!enlistedBots.some(enlistedBot => enlistedBot.id === bot.id)) {\n      // Add a bot\n      setEnlistedBots(prevEnlistedBots => [...prevEnlistedBots, {\n        id: bot.id,\n        name: bot.name,\n        health: bot.health,\n        damage: bot.damage,\n        armor: bot.armor,\n        bot_class: bot.bot_class,\n        catchphrase: bot.catchphrase,\n        avatar_url: bot.avatar_url\n      }]);\n    }\n  }; //Remove bot from army\n\n\n  const removeFromArmy = botId => {\n    //Filters bots\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(bot => bot.id !== botId));\n  };\n\n  const releaseBot = botId => {\n    // This deletes the bot from the API backend\n    fetch(`http://localhost:8002/bots/${botId}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to delete bot from the backend\");\n      }\n    }); // .catch((error) => {\n    //   console.error(error);\n    // });\n    // Release the bot from the army\n\n    removeFromArmy(botId);\n  }; // BotsPage format\n\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <YourBotArmy\n    //     enlistedBots={enlistedBots}\n    //     removeFromArmy={removeFromArmy}\n    //     releaseBot={releaseBot}\n    //   />\n    //   <BotCollection bots={bots} enlistBot={enlistBot} />\n    // </div>\n    _jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"Arial, sans-serif\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83E\\uDD16 My Ultimate Bot Command Center \\uD83D\\uDE80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n        enlistedBots: enlistedBots,\n        removeFromArmy: removeFromArmy,\n        releaseBot: releaseBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n        bots: bots,\n        enlistBot: enlistBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: \"20px\",\n          fontStyle: \"italic\"\n        },\n        children: \"Ready f\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(BotsPage, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/moringa/Documents/Phase 2/Code Challenges/phase-2-hooks-code-challenge-bot-battlr-KevinKiseli/src/components/BotsPage.js"],"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotsPage","bots","setBots","enlistedBots","setEnlistedBots","fetch","then","response","json","enlistBot","bot","some","enlistedBot","id","prevEnlistedBots","name","health","damage","armor","bot_class","catchphrase","avatar_url","removeFromArmy","botId","filter","releaseBot","method","ok","Error","fontFamily","textAlign","marginTop","fontStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  // State for all available bots\n  const [bots, setBots] = useState([]);\n\n  //State for bots in my army\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n\n  // Fetches bots from API\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\")\n      .then((response) => response.json())\n      .then((bots) => {\n        setBots(bots);\n      });\n  }, []);\n\n  // Enlists bots in army\n  const enlistBot = (bot) => {\n    \n    // checking if bot is already enlisted\n    if (!enlistedBots.some((enlistedBot) => enlistedBot.id === bot.id)) {\n\n      // Add a bot\n      setEnlistedBots((prevEnlistedBots) => [\n        ...prevEnlistedBots,\n        {\n          id: bot.id,\n          name: bot.name,\n          health: bot.health,\n          damage: bot.damage,\n          armor: bot.armor,\n          bot_class: bot.bot_class,\n          catchphrase: bot.catchphrase,\n          avatar_url: bot.avatar_url,\n        },\n      ]);\n    }\n  };\n\n\n  //Remove bot from army\n  const removeFromArmy = (botId) => {\n\n    //Filters bots\n    setEnlistedBots((prevEnlistedBots) =>\n      prevEnlistedBots.filter((bot) => bot.id !== botId)\n    );\n  };\n\n  const releaseBot = (botId) => {\n    // This deletes the bot from the API backend\n    fetch(`http://localhost:8002/bots/${botId}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to delete bot from the backend\");\n        }\n      })\n    \n      // .catch((error) => {\n      //   console.error(error);\n      // });\n\n    // Release the bot from the army\n    removeFromArmy(botId);\n  };\n\n\n  // BotsPage format\n  return (\n    // <div>\n    //   <YourBotArmy\n    //     enlistedBots={enlistedBots}\n    //     removeFromArmy={removeFromArmy}\n    //     releaseBot={releaseBot}\n    //   />\n    //   <BotCollection bots={bots} enlistBot={enlistBot} />\n    // </div>\n    <div style={{ fontFamily: \"Arial, sans-serif\", textAlign: \"center\" }}>\n      <h1>ðŸ¤– My Ultimate Bot Command Center ðŸš€</h1>\n      <YourBotArmy\n        enlistedBots={enlistedBots}\n        removeFromArmy={removeFromArmy}\n        releaseBot={releaseBot}\n      />\n      <BotCollection bots={bots} enlistBot={enlistBot} />\n      <p style={{ marginTop: \"20px\", fontStyle: \"italic\" }}>\n        Ready f\n      </p>\n      </div>\n  );\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}