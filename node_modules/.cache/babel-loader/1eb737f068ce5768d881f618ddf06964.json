{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/moringa/Documents/Phase 2/Code Challenges/phase-2-hooks-code-challenge-bot-battlr-KevinKiseli/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\n// BotsPage.js\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  _s();\n\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\").then(response => response.json()).then(bots => {\n      setBots(bots);\n    });\n  }, []);\n\n  const enlistBot = bot => {\n    if (!enlistedBots.some(enlistedBot => enlistedBot.id === bot.id)) {\n      setEnlistedBots(prevEnlistedBots => [...prevEnlistedBots, {\n        id: bot.id,\n        name: bot.name,\n        health: bot.health,\n        damage: bot.damage,\n        armor: bot.armor,\n        bot_class: bot.bot_class,\n        catchphrase: bot.catchphrase,\n        avatar_url: bot.avatar_url\n      }]);\n    }\n  };\n\n  const removeFromArmy = botId => {\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(bot => bot.id !== botId));\n  };\n\n  const releaseBot = botId => {\n    // Call the backend API to delete the bot\n    fetch(`http://localhost:8002/bots/${botId}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to delete bot from the backend\");\n      }\n    }).catch(error => {\n      console.error(error); // You may want to handle the error in a way that makes sense for your application\n    }); // Release the bot from the army\n\n    removeFromArmy(botId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      enlistedBots: enlistedBots,\n      removeFromArmy: removeFromArmy,\n      releaseBot: releaseBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistBot: enlistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/moringa/Documents/Phase 2/Code Challenges/phase-2-hooks-code-challenge-bot-battlr-KevinKiseli/src/components/BotsPage.js"],"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotsPage","bots","setBots","enlistedBots","setEnlistedBots","fetch","then","response","json","enlistBot","bot","some","enlistedBot","id","prevEnlistedBots","name","health","damage","armor","bot_class","catchphrase","avatar_url","removeFromArmy","botId","filter","releaseBot","method","ok","Error","catch","error","console"],"mappings":";;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESL,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMQ,SAAS,GAAIC,GAAD,IAAS;AACzB,QAAI,CAACP,YAAY,CAACQ,IAAb,CAAmBC,WAAD,IAAiBA,WAAW,CAACC,EAAZ,KAAmBH,GAAG,CAACG,EAA1D,CAAL,EAAoE;AAClET,MAAAA,eAAe,CAAEU,gBAAD,IAAsB,CACpC,GAAGA,gBADiC,EAEpC;AACED,QAAAA,EAAE,EAAEH,GAAG,CAACG,EADV;AAEEE,QAAAA,IAAI,EAAEL,GAAG,CAACK,IAFZ;AAGEC,QAAAA,MAAM,EAAEN,GAAG,CAACM,MAHd;AAIEC,QAAAA,MAAM,EAAEP,GAAG,CAACO,MAJd;AAKEC,QAAAA,KAAK,EAAER,GAAG,CAACQ,KALb;AAMEC,QAAAA,SAAS,EAAET,GAAG,CAACS,SANjB;AAOEC,QAAAA,WAAW,EAAEV,GAAG,CAACU,WAPnB;AAQEC,QAAAA,UAAU,EAAEX,GAAG,CAACW;AARlB,OAFoC,CAAvB,CAAf;AAaD;AACF,GAhBD;;AAkBA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCnB,IAAAA,eAAe,CAAEU,gBAAD,IACdA,gBAAgB,CAACU,MAAjB,CAAyBd,GAAD,IAASA,GAAG,CAACG,EAAJ,KAAWU,KAA5C,CADa,CAAf;AAGD,GAJD;;AAMA,QAAME,UAAU,GAAIF,KAAD,IAAW;AAC5B;AACAlB,IAAAA,KAAK,CAAE,8BAA6BkB,KAAM,EAArC,EAAwC;AAC3CG,MAAAA,MAAM,EAAE;AADmC,KAAxC,CAAL,CAGGpB,IAHH,CAGSC,QAAD,IAAc;AAClB,UAAI,CAACA,QAAQ,CAACoB,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD;AACF,KAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd,EADgB,CAEhB;AACD,KAXH,EAF4B,CAe5B;;AACAR,IAAAA,cAAc,CAACC,KAAD,CAAd;AACD,GAjBD;;AAmBA,sBACE;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,YAAY,EAAEpB,YADhB;AAEE,MAAA,cAAc,EAAEmB,cAFlB;AAGE,MAAA,UAAU,EAAEG;AAHd;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,aAAD;AAAe,MAAA,IAAI,EAAExB,IAArB;AAA2B,MAAA,SAAS,EAAEQ;AAAtC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjEQT,Q;;KAAAA,Q;AAmET,eAAeA,QAAf","sourcesContent":["// BotsPage.js\n\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\")\n      .then((response) => response.json())\n      .then((bots) => {\n        setBots(bots);\n      });\n  }, []);\n\n  const enlistBot = (bot) => {\n    if (!enlistedBots.some((enlistedBot) => enlistedBot.id === bot.id)) {\n      setEnlistedBots((prevEnlistedBots) => [\n        ...prevEnlistedBots,\n        {\n          id: bot.id,\n          name: bot.name,\n          health: bot.health,\n          damage: bot.damage,\n          armor: bot.armor,\n          bot_class: bot.bot_class,\n          catchphrase: bot.catchphrase,\n          avatar_url: bot.avatar_url,\n        },\n      ]);\n    }\n  };\n\n  const removeFromArmy = (botId) => {\n    setEnlistedBots((prevEnlistedBots) =>\n      prevEnlistedBots.filter((bot) => bot.id !== botId)\n    );\n  };\n\n  const releaseBot = (botId) => {\n    // Call the backend API to delete the bot\n    fetch(`http://localhost:8002/bots/${botId}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to delete bot from the backend\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        // You may want to handle the error in a way that makes sense for your application\n      });\n\n    // Release the bot from the army\n    removeFromArmy(botId);\n  };\n\n  return (\n    <div>\n      <YourBotArmy\n        enlistedBots={enlistedBots}\n        removeFromArmy={removeFromArmy}\n        releaseBot={releaseBot}\n      />\n      <BotCollection bots={bots} enlistBot={enlistBot} />\n    </div>\n  );\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}